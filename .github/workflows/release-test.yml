name: Release Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  changelog:
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v2
      - name: Release Changelog Builder
  # You may pin to the exact commit or the version.
  # uses: mikepenz/release-changelog-builder-action@794aa31f391c070ccda94f6fb1aaa2013a9b5574
        uses: mikepenz/release-changelog-builder-action@v1.5.1
        with:
    # Defines the relative path to the configuration file.
          #configuration: # optional
    # Defines the directory the repo is located in (checkout directory)
          #path: # optional
    # Defines the owner of the repository to create the changelog for
          #owner: # optional
    # Defines the repository to create the changelog for
          #repo: # optional
    # Defines the previous tag to compare against
          #fromTag: # optional
    # Defines the newly tag created
          #toTag: # optional
    # Defines if the action will only use full releases to compare against (Only used if fromTag is not defined). E.g. for 1.0.1... 1.0.0-rc02 <- ignore, 1.0.0 <- pick
          #ignorePreReleases: # optional, default is false
    # Defines if the action should result in a build failure, if an error was discovered
          #failOnError: # optional, default is false
    # Enables a `light` commit based mode. This mode generates changelogs based on the commits. Please note that this is not officially supported, and lacks a lot of features only possible with PRs.
          #commitMode: # optional, default is false
    # If defined, the changelog will get written to this file. (relative to the checkout dir)
          outputFile: CHANGELOG.md    # optional
    # Defines the token to use to execute the git API requests with, uses `env.GITHUB_TOKEN` by default
          token: ${{ secrets.ACCESS_TOKEN }}
